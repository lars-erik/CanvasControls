<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Shape sandbox</title>
	<script type="text/javascript" src="Scripts/jquery-1.7.1.min.js"></script>
	<script type="text/javascript" src="Scripts/class.js"></script>
	<script type="text/javascript" src="Scripts/canvascontrols.js"></script>
	<script type="text/javascript" src="Scripts/canvascontrols.observable.js"></script>
	<script type="text/javascript" src="Scripts/canvascontrols.shape.js"></script>
	<script type="text/javascript" src="Scripts/canvascontrols.compositeshape.js"></script>
	<script type="text/javascript" src="Scripts/canvascontrols.canvasview.js"></script>
	<script type="text/javascript" src="Scripts/canvascontrols.dragging.js"></script>
</head>
<body>
	
	<canvas id="canvas" style="position:absolute;width:100%;height:100%;left:0px;top:0px;"></canvas>
	
	<script type="text/javascript">

		var Box = canvascontrols.Shape.extend({
			init: function (options) {
				this._super(options);
				this.l = options.l;
				this.hovered = false;

				this.on("mouseover", this, function () {
					this.hovered = true;
				});

				this.on("mouseout", this, function () {
					this.hovered = false;
				});

				this.on("click", this, function() {
					alert(this.l);
				});
			},
			paint: function (context) {
				context.save();
				context.fillStyle = this.hovered ? "#CCCCCC" : "#FFFFFF";
				context.strokeStyle = this.hovered ? "#0000FF" : "#000000";
				context.fillRect(0, 0, this.width(), this.height());
				context.strokeRect(0, 0, this.width(), this.height());
				context.fillStyle = "#000000";
				context.fillText(this.l, 0, this.height());
				context.restore();
			}
		});

		var canvasView = new canvascontrols.CanvasView("#canvas");

		var box1 = new Box({ x: 25, y: 35, width: 50, height: 50, l: "1" });
		var box2 = new Box({ x: 150, y: 45, width: 50, height: 50, l: "2" });

		canvasView.add(box1);
		canvasView.add(box2);

		canvasView.paint();

		canvasView.on("mousemove", {}, function () {
			canvasView.paint();
		});

	</script>

</body>
</html>
