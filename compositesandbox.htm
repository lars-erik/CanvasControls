<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Composite sandbox</title>
	<script type="text/javascript" src="scripts/jquery-1.7.1.min.js"></script>
	<script type="text/javascript" src="scripts/class.js"></script>
	<script type="text/javascript" src="scripts/canvascontrols.js"></script>
	<script type="text/javascript" src="scripts/canvascontrols.observable.js"></script>
	<script type="text/javascript" src="scripts/canvascontrols.shape.js"></script>
	<script type="text/javascript" src="scripts/canvascontrols.compositeshape.js"></script>
	<script type="text/javascript" src="scripts/canvascontrols.canvasview.js"></script>
	<script type="text/javascript" src="scripts/canvascontrols.dragging.js"></script>
	<style type="text/css">
		body
		{
			margin-top: 1.0em;
			background-color: #f2f2f2;
			font-family: Helvetica, Arial, FreeSans, san-serif;
			color: #000000;
		}
		#container
		{
			position: relative;
			margin: 0 auto;
			width: 700px;
		}
		h1
		{
			font-size: 3.8em;
			color: #0d0d0d;
			margin-bottom: 3px;
		}
		h1 .small
		{
			font-size: 0.4em;
		}
		h1 a
		{
			text-decoration: none;
		}
		h2
		{
			font-size: 1.5em;
			color: #0d0d0d;
		}
		h3
		{
			text-align: center;
			color: #0d0d0d;
		}
		a
		{
			color: #0d0d0d;
		}
		.description
		{
			font-size: 1.2em;
			margin-bottom: 30px;
			margin-top: 30px;
			font-style: italic;
		}
		.download
		{
			float: right;
		}
		pre
		{
			background: #000;
			color: #fff;
			padding: 15px;
		}
		hr
		{
			border: 0;
			width: 80%;
			border-bottom: 1px solid #aaa;
		}
		.footer
		{
			text-align: center;
			padding-top: 30px;
			font-style: italic;
		}
	</style>
</head>
<body>
	<div id="container">
		<span style="float:right;"><a href="index.html">Back to index</a></span>
		<b>A simple box handling its own events:</b><br />
		<canvas id="canvas" style="position: absolute; width: 350px; height: 200px;
	  	top: 30px; border: 1px solid gray;"></canvas>
		<div style="position: absolute; top: 30px; left: 360px;">
			<b>Click output:</b><br />
			<div id="output" style="width: 340px; height: 182px; border: 1px solid gray; overflow: auto;">
			</div>
		</div>
		<div style="position: absolute; top: 240px;">
			<pre style="width:670px; overflow:auto;">
var CompositeBox = canvascontrols.CompositeShape.extend({
	init: function (options) {
		this._super(options);
		this.l = options.l;
		this.hovered = false;

		this.on("mouseover", this, function () {
			this.hovered = true;
			this.invalidate();
		});

		this.on("mouseout", this, function () {
			this.hovered = false;
			this.invalidate();
		});

		this.on("click", this, function () {
			$("output").text(
				"You clicked " + this.l + "&lt;br /&gt;" + $("output").text()
			);
		});
	},
	paint: function (context) {
		context.save();
		context.fillStyle = this.hovered ? "#CCCCCC" : "#FFFFFF";
		context.strokeStyle = this.hovered ? "#0000FF" : "#000000";
		context.fillRect(0, 0, this.width(), this.height());
		context.strokeRect(0, 0, this.width(), this.height());
		context.fillStyle = "#000000";
		context.fillText(this.l, 0, this.height());
		context.restore();
		this._super(context);
	}
});

var canvasView = new canvascontrols.CanvasView("#canvas");

var root1 = canvasView.add(new CompositeBox({ x: 10, y: 10, l: "1" }));
var root2 = canvasView.add(new CompositeBox({ x: 175, y: 10, l: "2" }));

var child11 = root1.add(new CompositeBox({ x: 5, y: 10, width: 70, height: 100, l: "11" }));
var child12 = root1.add(new CompositeBox({ x: 55, y: 120, width: 45, height: 40, l: "12" }));

var grandChild111 = child11.add(new CompositeBox({ width: 20, height: 20, l: "111" }));

var child21 = root2.add(new CompositeBox({ x: 30, y: 15, width: 130, height: 60, l: "21" }));

canvasView.paint();
		</pre>
		</div>
	</div>
	<script type="text/javascript">

		var CompositeBox = canvascontrols.CompositeShape.extend({
			init: function (options) {
				this._super(options);
				this.l = options.l;
				this.hovered = false;

				this.on("mouseover", this, function () {
					this.hovered = true;
					this.invalidate();
				});

				this.on("mouseout", this, function () {
					this.hovered = false;
					this.invalidate();
				});

				this.on("click", this, function () {
					$("#output").html(
							"You clicked " + this.l + "<br/>" + $("#output").html()
						);
				});
			},
			paint: function (context) {
				context.save();
				context.fillStyle = this.hovered ? "#CCCCCC" : "#FFFFFF";
				context.strokeStyle = this.hovered ? "#0000FF" : "#000000";
				context.fillRect(0, 0, this.width(), this.height());
				context.strokeRect(0, 0, this.width(), this.height());
				context.fillStyle = "#000000";
				context.fillText(this.l, 0, this.height());
				context.restore();
				this._super(context);
			}
		});

		var canvasView = new canvascontrols.CanvasView("#canvas");

		var root1 = canvasView.add(new CompositeBox({ x: 10, y: 10, l: "1" }));
		var root2 = canvasView.add(new CompositeBox({ x: 175, y: 10, l: "2" }));

		var child11 = root1.add(new CompositeBox({ x: 5, y: 10, width: 70, height: 100, l: "11" }));
		var child12 = root1.add(new CompositeBox({ x: 55, y: 120, width: 45, height: 40, l: "12" }));

		var grandChild111 = child11.add(new CompositeBox({ width: 20, height: 20, l: "111" }));

		var child21 = root2.add(new CompositeBox({ x: 30, y: 15, width: 130, height: 60, l: "21" }));

		canvasView.paint();

	</script>
</body>
</html>
